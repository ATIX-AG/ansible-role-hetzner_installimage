---
- name: copy public key into tempfile
  shell: /usr/bin/tail -1 /root/.ssh/authorized_keys > /root/tmpKey
  args:
    creates: /root/tmpKey
  retries: 3
  delay: 5
  register: cp_ssh_key
  until: cp_ssh_key.rc == 0

- name: Include installimage config tasks
  include: config.yml

- name: Pause for 30 seconds in order to avoid "device in use" issues
  pause:
    seconds: 30

- name: run installimage
  command: /root/.oldroot/nfs/install/installimage -K /root/tmpKey -c /root/installimage.cfg -a
  register: installimage_result
  changed_when: true
  failed_when: "'Error' in installimage_result.stderr"

- name: do another hardware reset
  uri:
    url: "{{ hetzner_installimage_robot_api_base_url }}/reset/{{ ansible_default_ipv4.address }}"
    method: POST
    user: "{{ hetzner_installimage_webservice_username }}"
    password: "{{ hetzner_installimage_webservice_password }}"
    force_basic_auth: yes
    body: "type=hw"
    status_code: 200
    body_format: form-urlencoded
  delegate_to: localhost
  register: reset

- name: remove server from local known_hosts file
  command: ssh-keygen -R {{ ansible_default_ipv4.address }}
  delegate_to: localhost
  changed_when: true

- name: pause a bit for the reboot to kick in
  pause: seconds=60
  delegate_to: localhost

- name: waiting for server to come back
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 22
    delay: 1
    timeout: 180
  delegate_to: localhost

# uses raw instead of module as python might not be installed yet
- name: update apt repositories
  raw: apt-get update
  changed_when: true
  retries: 3
  delay: 5
  register: update_apt
  until: update_apt.rc == 0

# uses raw instead of module as python might not be installed yet
- name: install python on remote host
  raw: apt-get install python -y
  changed_when: true

- name: generate hostcode
  set_fact:
    _hostcode: "{{ ansible_default_ipv4.address | md5 }}"

- name: create hostcode file
  template:
    src: hostcode.j2
    dest: /etc/hostcode
    owner: root
    group: root
    mode: 0644

- name: set the server name in the hetzner robot if defined
  uri:
    url: "{{ hetzner_installimage_robot_api_base_url }}/server/{{ ansible_default_ipv4.address }}"
    method: POST
    user: "{{ hetzner_installimage_webservice_username }}"
    password: "{{ hetzner_installimage_webservice_password }}"
    force_basic_auth: yes
    body: "server_name={{ hetzner_server_name }}"
    status_code: 200
  delegate_to: localhost
  register: hetzner_installimage_rescue
  when: hetzner_server_name is defined
